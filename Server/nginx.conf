
user root;
worker_processes  4;

# pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile        on;
    # tcp_nopush     on;

    # keepalive_timeout  0;
    keepalive_timeout  65;
    limit_req_zone $binary_remote_addr zone=m_perip:100m rate=200r/s;
    gzip  on;
    gzip_min_length 1k;
    gzip_comp_level 4;
    gzip_buffers 4 16k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    client_header_buffer_size 512k;
    large_client_header_buffers 4 512k;
    server_names_hash_bucket_size 1024;

    server {
        if ($time_iso8601 ~ '(\d{4}-\d{2}-\d{2})') {
            set $tttt $1;
        }

        # listen 80;
        listen 443 ssl;
        ssl_certificate /root/cert/logic.autojs.org_bundle.pem;
        ssl_certificate_key /root/cert/logic.autojs.org.key;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        server_name logic.autojs.org;

        charset utf-8;
        access_log  logs/access/$tttt.log main;
        error_log  logs/error/error.log;

        location / {
            proxy_pass       http://localhost:8000/;
            proxy_redirect   off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /space {
            proxy_pass http://localhost:4201/;
        }
    }

    server {
        if ($time_iso8601 ~ '(\d{4}-\d{2}-\d{2})') {
            set $tttt1 $1;
        }

        listen 4201;

        charset utf-8;
        access_log  logs/access/$tttt.log main;
        error_log  logs/error/error.log;

        # root C:/Users/21257/BlockLogic/Client/dist/space;
        root /root/angular/dist/space;

        location / {
            index index.html
            try_files $uri $uri/ /index.html;
        }
    }

    server {
        listen       80;
        server_name logic.autojs.org;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen       80;
        server_name  47.97.106.8;

        location / {
            root   /home/build;
            index  index.html index.htm;
        }
    }

}